{"version":3,"sources":["components/ToDoListTemplate.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoListTemplate","form","children","className","Form","value","onChange","onCreate","onKeyPress","onClick","TodoItem","this","props","text","checked","id","onToggle","onRemove","e","stopPropagation","Component","TodoItemList","nextProps","nextState","todos","todoList","map","App","state","input","handleChange","setState","target","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRemove","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4db29a8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ToDoListTemplate.css';\r\n\r\nconst ToDoListTemplate = ({form, children}) => {\r\n    return(\r\n        <main className=\"todo-list-template\">\r\n            <div className=\"title\">\r\n                ♡ To Do ♡\r\n            </div>\r\n            <section className=\"form-wrapper\">\r\n                {form}\r\n            </section>\r\n            <section className=\"todos-wrapper\">\r\n                {children}\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ToDoListTemplate;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({value, onChange,onCreate, onKeyPress}) => {\r\n    return(\r\n        <div className=\"form\">\r\n            <input value={value} onChange={onChange} onKeyPress={onKeyPress} />\r\n            <div className =\"create-button\" onClick={onCreate}>\r\n                +\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\nimport './TodoItem.css';\r\n\r\nclass TodoItem extends Component {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState){\r\n    //     return this.props.checked !== next.Props.checked;\r\n    // }\r\n\r\n    render() {\r\n\r\n        const { text, checked, id, onToggle, onRemove } = this.props;\r\n        \r\n        return(\r\n            <div className=\"todo-item\" onClick={() => onToggle(id)}>\r\n                <div className=\"remove\" onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onRemove(id)}\r\n                }>&times;</div>\r\n                <div className={`todo-text ${checked && 'checked'}`}>\r\n                    <div>{text}</div>\r\n                </div>\r\n                {\r\n                    checked && (<div className=\"check-mark\">✓</div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React, {Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nclass TodoItemList extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.todos !== nextProps.todos;\r\n    }\r\n\r\n    render() {\r\n        const {todos, onToggle, onRemove} = this.props;\r\n\r\n        const todoList = todos.map(\r\n            ({id, text, checked}) => (\r\n                <TodoItem\r\n                id={id}\r\n                text={text}\r\n                checked={checked}\r\n                onToggle={onToggle}\r\n                onRemove={onRemove}\r\n                key={id}\r\n                />\r\n            )\r\n        );\r\n        \r\n        return(\r\n            <div>\r\n                {todoList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItemList;","import React, { Component } from 'react';\nimport ToDoListTemplate from './components/ToDoListTemplate.js';\nimport Form from './components/Form';\nimport ToDoItemList from './components/TodoItemList'\n\nclass App extends Component{\n\n  id = 3\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: 'Nothing', checked: true },\n      { id: 1, text: 'Eat', checked: false },\n      { id: 2, text: 'Sleep', checked: false }\n    ]\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  handleCreate = (e) => {\n    const { input, todos } = this.state;\n    this.setState({\n      input: '',\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false\n      })\n      });\n    }\n\n    handleKeyPress = (e) => {\n      if(e.key === 'Enter') {\n        this.handleCreate();\n      }\n    }\n\n    handleToggle = (id) => {\n      const { todos } = this.state;\n  \n      // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index]; // 선택한 객체\n  \n      const nextTodos = [...todos]; // 배열을 복사\n  \n      // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n      nextTodos[index] = { \n        ...selected, \n        checked: !selected.checked\n      };\n  \n      this.setState({\n        todos: nextTodos\n      });\n    }\n    \n    handleRemove = (id) => {\n      const { todos } = this.state\n      this.setState({\n        todos: todos.filter(todo => todo.id !== id)\n      });\n    }\n  \n\n  render(){\n    const { input, todos } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove\n    } = this;\n\n    return(\n      <ToDoListTemplate form={(\n        <Form\n          value={input}\n          onKeyPress={handleKeyPress}\n          onChange={handleChange}\n          onCreate={handleCreate}\n        />\n      )}>\n        <ToDoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\n      </ToDoListTemplate>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}